I";<blockquote>
  <p>2019-6-18: 20:47:56</p>
</blockquote>

<h1 id="并行应用开发和优化概论阅读笔记">并行应用开发和优化概论阅读笔记</h1>

<p><em>参考链接：</em> <a href="">并行应用开发及优化方法概论</a></p>

<h2 id="现代计算机体系架构下的并行化">现代计算机体系架构下的并行化</h2>

<ul>
  <li>体系架构选择优化成本（制造与功耗）与性能</li>
  <li>指令级并行 (ILP)
    <ul>
      <li>流水线 (Pipelining)</li>
      <li>多指令发射</li>
      <li>乱序执行</li>
    </ul>
  </li>
  <li>向量化 (SIMD)
    <ul>
      <li>单条指令执行能够同时处理多个数据片</li>
    </ul>
  </li>
  <li>多线程 (MIMD)
    <ul>
      <li>多个程序实例能同时运行</li>
    </ul>
  </li>
  <li>多核</li>
</ul>

<h2 id="cpu架构发展处理器发展重要技术">CPU架构发展：处理器发展重要技术</h2>

<p><em>参考链接：</em> <a href="https://blog.csdn.net/stpeace/article/details/80101441">CPU的内部架构和工作原理</a>;<a href="https://blog.csdn.net/yang_yulei/article/details/22529437">处理器体系结构（了解CPU的基本运行原理）</a>;</p>

<ul>
  <li>位宽增大 8bit -&gt; 16bit -&gt; 32bit -&gt;64 bit</li>
  <li>流水线，使用多级流水提高主频：
    <ul>
      <li>超流水</li>
      <li>超标量</li>
      <li>超长指令字</li>
    </ul>
  </li>
  <li>基于Tomasulo算法的乱序执行</li>
  <li>SSE (Streaming SIMD Extensions) 指令集</li>
  <li>集成内存控制器</li>
  <li>超线程技术，进一步利用闲置计算部件</li>
  <li>多核技术。</li>
</ul>

<h2 id="性能关键指标">性能关键指标</h2>

<ul>
  <li>网络
    <ul>
      <li>以太网(千兆、万兆)</li>
      <li>Infiniband网络(<a href="https://baike.baidu.com/item/Infiniband/1963979?fr=aladdin">参考链接</a>)</li>
      <li>当机器配置多种网络时，需要查看是否使用高速的网络。</li>
    </ul>
  </li>
  <li>CPI(Cycles Per Instruction)
    <ul>
      <li>CPI表示每条指令完成所需要的周期数。</li>
      <li>CPU使用多发射技术，每个周期最多4条指令。
        <ul>
          <li>理想状态 CPI ＝ 0.25</li>
        </ul>
      </li>
      <li>CPI过高：
        <ul>
          <li>所选代码进一步优化的可能性高。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>浮点运算峰值
    <ul>
      <li>CPU浮点计算理论峰值计算方法。
        <ul>
          <li>例如：2x Intel Xeon processor E5-2670 2.6GHz：8 Flops/clock * 8 cores/socket * 2 sockets * 2.6GHz = 332.8 GF/s</li>
        </ul>
      </li>
      <li>科学计算以浮点数为主</li>
      <li>DGEMM ~93%</li>
      <li>LINPACK ~91%</li>
    </ul>
  </li>
  <li>向量化比率
    <ul>
      <li>向量化是CPU峰值计算的倍数因子。</li>
      <li>对应用程序性能影响很大。</li>
      <li>取值范围为0%～100%。</li>
      <li>向量化指令需要根据应用的逻辑。</li>
    </ul>
  </li>
  <li>Cache Miss
    <ul>
      <li>数据的存储层次（访问延迟）：
        <ul>
          <li>寄存器 (1cycle)</li>
          <li>cache: L1 (~4cycles), L2(~10cycles), LLC(~50cycles)</li>
          <li>内存(~300 cycles)</li>
          <li>本地硬盘（固态 50~150us，旋转 1~10ms）</li>
          <li>网络传输</li>
        </ul>
      </li>
      <li>cache 利用数据访问局部性原理，缓存最近常访问的数据。</li>
      <li>L1-D cache miss range</li>
    </ul>
  </li>
</ul>

<h2 id="查看分析应用性能指标工具">查看分析应用性能指标工具</h2>

<p><strong>Paramon和Paratune</strong></p>

<ul>
  <li>Paramon直观可视化程序运行过程中的系统级、微架构级和函数级等性能指标，为程序开发者清晰指明程序优化方向。</li>
  <li>Paratune用于分析优化程序性能，尤其针对大规模并行计算程序，通过多节点间系统级和微架构级等性能指标定性与定量对比分析，帮助程序开发者快速定位程序性能瓶颈点，优化编程提高程序性能。</li>
</ul>
:ET